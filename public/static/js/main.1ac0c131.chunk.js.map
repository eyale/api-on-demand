{"version":3,"sources":["assets/Logo.svg","components/Theme/ThemeProvider.js","store/reducers/types.js","store/reducers/signUp/constants.js","store/reducers/signUp/index.js","store/reducers/index.js","store/index.js","server/config.js","utils/helpers.js","server/index.js","utils/constants.js","store/reducers/view/constants.js","store/reducers/view/actions.js","store/reducers/signUp/actions.js","components/AccountInformation.js","components/Theme/ThemeSwitcher.js","components/Header.js","pages/NoRoute/index.js","components/GridWrapper.js","pages/Home/index.js","components/DimmerLoader.js","components/Forms/Login/index.js","pages/Login/index.js","components/Forms/SignUp/index.js","pages/SignUp/index.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ThemeContext","React","createContext","isDark","toggleTheme","ThemeProvider","children","useState","hasThemeLoaded","themeState","setThemeState","useEffect","lsDark","localStorage","getItem","document","querySelector","classList","add","useDarkThemeEffect","Provider","value","setItem","JSON","stringify","bodyEl","remove","COMMON","START","SUCCESS","ERROR","CLEAR","SIGNUP_GET_TOKEN","SIGNUP_CLEAR_USER_INFO","SIGNUP_CLEAR_USER_ERROR","defaultState","loading","loaded","error","token","password","decodedToken","appReducer","combineReducers","signUp","state","action","type","CONSTANTS","payload","jwt","access_token","allReducers","undefined","persistConfig","createLogger","collapsed","logEntry","timeout","key","storage","stateReconciler","hardSet","middleware","thunk","persistedReducer","persistReducer","enhancers","compose","applyMiddleware","store","initialState","createStore","persistor","persistStore","apiUrl","loginValidationSchema","yup","shape","username","label","email","required","signUpValidationSchema","repeatPassword","paramsSerializer","params","Object","keys","map","encodeURIComponent","join","requestWidth","method","route","headers","axios","url","data","post","then","res","tokenHeaders","tokenParams","grant_type","scope","client_id","client_secret","signUpPlaceholders","signUpFields","loginPlaceholders","loginFields","serverError","dispatch","getToken","adjustedParams","a","formData","URLSearchParams","append","console","info","response","status","AccountInformation","clearUserInfo","className","Icon","name","color","Dropdown","text","Menu","Item","Divider","onClick","e","preventDefault","defaulProps","mapDispatchToProps","connect","ThemeSwitcher","context","useContext","Error","useTheme","id","checked","onChange","aria-label","htmlFor","role","Header","to","src","Logo","alt","NoRoute","GridWrapper","Grid","Row","centered","Column","largeScreen","mobile","Message","pathname","DimmerLoader","active","Dimmer","inverted","Loader","Login","onSubmit","serverErrors","handleSubmit","values","errorMessage","error_description","initialValues","fields","validationSchema","props","isDisabled","length","every","field","getLoginDisabledStatus","handleChange","handleBlur","errors","touched","Form","Input","fluid","placeholder","placeholders","onBlur","content","Button","size","disabled","defaultProps","withRouter","history","push","SignUp","isPassHidden","handleIsPassHidden","isRepeatPassHidden","handleIsRepeatPassHidden","togglePassEye","toggleRepeatPassEye","iconName","repeatIconName","typeRepeat","getSignUpDisabledStatus","icon","Routes","path","exact","component","Home","configureStore","Application","App","Boolean","window","location","hostname","match","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+HAAAA,EAAOC,QAAU,IAA0B,kC,+wBCI3C,IAAMC,EAAeC,IAAMC,cAAc,CACvCC,QAAQ,EACRC,YAAa,eAqCTC,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAtBb,WAAO,IAAD,EACKC,mBAAS,CAC3CJ,QAAQ,EACRK,gBAAgB,IAHa,mBACxBC,EADwB,KACZC,EADY,KAmB/B,OAbAC,qBAAU,WACR,IAAMC,EAA4C,SAAnCC,aAAaC,QAAQ,UAEhCF,GACFG,SAASC,cAAc,QAAQC,UAAUC,IAAI,QAE/CR,EAAc,EAAD,GACRD,EADQ,CAEXN,OAAQS,EACRJ,gBAAgB,OAEjB,IAEI,CAAEC,aAAYC,iBAIiBS,GAA9BV,EAD8B,EAC9BA,WAAYC,EADkB,EAClBA,cAIpB,IAAKD,EAAWD,eAAgB,OAAO,8BAkBvC,OACE,kBAACR,EAAaoB,SAAd,CACEC,MAAO,CACLlB,OAAQM,EAAWN,OACnBC,YAlBc,WAClB,IAAMD,GAAUM,EAAWN,OAE3BU,aAAaS,QAAQ,SAAUC,KAAKC,UAAUrB,IAC9C,IAAMsB,EAASV,SAASC,cAAc,QAElCb,EACFsB,EAAOR,UAAUC,IAAI,QAErBO,EAAOR,UAAUS,OAAO,QAE1BhB,EAAc,EAAD,GAAMD,EAAN,CAAkBN,eAS5BG,I,kGCxEMqB,EAAS,CACpBC,MAAO,UACPC,QAAS,YACTC,MAAO,UACPC,MAAO,WCJM,GACbC,iBAAkB,mBAClBC,uBAAwB,yBACxBC,wBAAyB,2B,yjBCC3B,IAAMC,EAAe,CACnBC,SAAS,EACTC,QAAQ,EACRC,MAAO,KACPC,MAAO,KACPC,SAAU,GACVC,aAAc,ICPhB,IAAMC,EAAaC,YAAgB,CACjCC,ODSa,WAAoD,IAApCC,EAAmC,uDAA3BV,EAAcW,EAAa,uDAAJ,GAC5D,OAAQA,EAAOC,MACb,KAAKC,EAAUf,uBACb,OAAOE,EAET,KAAKa,EAAUd,wBACb,OAAO,KACFW,EADL,CAEEP,MAAOH,EAAaG,QAGxB,IAAI,GAAJ,OAAQU,EAAUhB,kBAAlB,OAAqCL,EAAOC,OAC1C,OAAO,KACFiB,EADL,CAEEL,SAAUM,EAAOG,QAAQT,SACzBJ,SAAS,IAGb,IAAI,GAAJ,OAAQY,EAAUhB,kBAAlB,OAAqCL,EAAOE,SAC1C,OAAO,KACFgB,EADL,CAEET,QAASD,EAAaC,QACtBG,MAAOO,EAAOG,QACdX,MAAOH,EAAaG,MACpBD,QAAQ,EACRI,aAAcS,IAAIJ,EAAOG,QAAQE,gBAGrC,IAAI,GAAJ,OAAQH,EAAUhB,kBAAlB,OAAqCL,EAAOG,OAC1C,OAAO,KACFe,EADL,CAEET,QAASD,EAAaC,QACtBE,MAAOQ,EAAOG,UAGlB,QACE,OAAOJ,MClCEO,EARK,SAACP,EAAOC,GAC1B,MAAoB,2BAAhBA,EAAOC,KACFL,OAAWW,EAAWP,GAGxBJ,EAAWG,EAAOC,ICArBQ,GAJSC,uBAAa,CAC1BC,UAAW,SAAAC,GAAQ,OAAKA,EAASnB,SAGb,CACpBoB,QAAS,EACTC,IAAK,UACLC,YACAC,gBAAiBC,MAGbC,EAAa,CAACC,KAMpB,IAAMC,EAAmBC,YAAeZ,EAAeF,GACjDe,EAAYC,YAAQC,IAAe,WAAf,EAAmBN,IAU9BO,EARD,WAAwB,IAAvBC,EAAsB,uDAAP,GACtBD,EAAQE,YAAYP,EAAkBM,EAAcJ,GAEpDM,EAAYC,YAAaJ,GAE/B,MAAO,CAAEA,QAAOG,c,8FChCLE,EAAS,iD,QCITC,G,cAAwBC,WAAaC,MAAM,CACtDC,SAAUF,WAEPG,MAAM,YACNC,MAAM,sBACNC,WACH1C,SAAUqC,WAEPG,MAAM,YACNE,SAAS,iCAGDC,EAAyBN,WAAaC,MAAM,CACvDC,SAAUF,WAEPG,MAAM,YACNC,MAAM,sBACNC,WACH1C,SAAUqC,WAEPG,MAAM,YACNE,SAAS,8BACZE,eAAgBP,WAEbG,MAAM,mBACNE,SAAS,iCAIDG,EAAmB,SAAAC,GAC9B,MAAsB,kBAAXA,EACFC,OAAOC,KAAKF,GAChBG,KACC,SAAA9B,GAAG,gBAAO+B,mBAAmB/B,GAA1B,YAAkC+B,mBAAmBJ,EAAO3B,QAEhEgC,KAAK,KAEH,MCrCHC,EAAe,SAACC,EAAQC,GAAiC,IAA1BR,EAAyB,uDAAhB,GAAIS,EAAY,uCAC5D,MAAe,SAAXF,EACKG,IAAM,CACXH,SACAI,IAAI,GAAD,OAAKtB,EAAL,YAAemB,GAClBI,KAAMZ,EACND,mBACAU,YAGGC,IAAM,CACXH,SACAI,IAAI,GAAD,OAAKtB,EAAL,YAAemB,GAClBR,SACAD,sBAOSc,EAAO,SAACL,EAAOR,GAAR,IAAgBS,EAAhB,uDAA0B,GAA1B,OAClBH,EAAa,OAAQE,EAAOR,EAAQS,GAASK,MAAK,SAAAC,GAAG,OAAIA,EAAIH,SC3BlDI,GAAe,CAC1B,eAAgB,qCAYLC,GAAc,CACzBC,WAAY,WACZC,MAAO,oBACPC,UAAW,oBACXC,cAAe,wBAGJC,GACD,iBADCA,GAED,cAFCA,GAGK,cAGLC,GAAe,CAC1B9B,SAAU,GACVvC,SAAU,GACV4C,eAAgB,IAGL0B,GACD,iBADCA,GAED,cAECC,GAAc,CACzBhC,SAAU,GACVvC,SAAU,ICtCG,GACM,oBCURwE,GAAc,SAAA1B,GAAM,OAAI,SAAA2B,GAAQ,OAC3CA,EAAS,CACPlE,KAAMC,GACNC,QAASqC,M,+NCPN,IAgBM4B,GAAW,SAAA5B,GACtB,IAAM6B,E,2VAAc,IACf7B,EADe,GAEfiB,IAGL,8CAAO,WAAMU,GAAN,iBAAAG,EAAA,6DACLH,EAAS,CACPlE,KAAK,GAAD,OAAKC,EAAUhB,kBAAf,OAAkCL,EAAOC,OAC7CqB,QAASkE,IAHN,UAMGE,EAAW,IAAIC,iBAEZC,OAAO,aAAcJ,EAAeX,YAC7Ca,EAASE,OAAO,YAAaJ,EAAeT,WAC5CW,EAASE,OAAO,gBAAiBJ,EAAeR,eAChDU,EAASE,OAAO,QAASJ,EAAeV,OACxCY,EAASE,OAAO,WAAYJ,EAAepC,UAC3CsC,EAASE,OAAO,WAAYJ,EAAe3E,UAbxC,UAee2D,EAAK,gBAAiBkB,EAAUtB,IAf/C,QAeGM,EAfH,OAiBHY,EAAS,CACPlE,KAAK,GAAD,OAAKC,EAAUhB,kBAAf,OAAkCL,EAAOE,SAC7CoB,QAASoD,IAnBR,kDAsBHmB,QAAQC,KAAK,QAAb,MACI,KAAIC,UAAoC,MAAxB,KAAIA,SAASC,OAC/BX,GAAY,KAAIU,UAEhBT,EAAS,CACPlE,KAAK,GAAD,OAAKC,EAAUhB,kBAAf,OAAkCL,EAAOG,OAC7CmB,QAAS,KAAIyE,WA5Bd,0DAAP,mDAAM,ICvBFE,GAAqB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,cAAejF,EAAa,EAAbA,OAMzBqC,EAEdrC,EAFFH,aAAgBwC,MAIlB,OAFIrC,EADFL,MAIA,oCACE,yBAAKuF,UAAU,eACb,yBAAKA,UAAU,sBACb,kBAACC,EAAA,EAAD,CAAMC,KAAK,eAAeC,MAAM,SAChC,8BACE,kBAACF,EAAA,EAAD,CAAMC,KAAK,OAAOC,MAAM,SACxB,kBAACC,EAAA,EAAD,CAAUC,KAAMlD,GACd,kBAACiD,EAAA,EAASE,KAAV,KACE,kBAACF,EAAA,EAASG,KAAV,CAAeF,KAAK,QACpB,kBAACD,EAAA,EAASI,QAAV,MACA,kBAACJ,EAAA,EAASG,KAAV,CAAeF,KAAK,SAASI,QApBtB,SAAAC,GACnBA,EAAEC,iBACFZ,aAyBE,MAGND,GAAmBc,YAAc,CAC/B9F,OAAQ,CACNL,MAAO,KACPE,aAAc,KAalB,IAEMkG,GAAqB,CACzBzB,YACAW,cD1C2B,WAC3B,OAAO,SAAAZ,GACLA,EAAS,CACPlE,KAAMC,EAAUf,4BC0CP2G,gBAPS,SAAC,GAAD,MAAiB,CAAEhG,OAAnB,EAAGA,UAOa+F,GAAzBC,CAA6ChB,IC9B7CiB,I,OAzBO,WAAO,IAAD,EdKX,WACf,IAAMC,EAAUC,qBAAW/I,GAE3B,IAAK8I,EACH,MAAM,IAAIE,MAAM,8CAElB,OAAOF,EcVyBG,GAAxB9I,EADkB,EAClBA,OAAQC,EADU,EACVA,YAEhB,OACE,yBAAK0H,UAAU,UACb,2BACE/E,KAAK,WACLmG,GAAG,SACHC,QAAShJ,EACTiJ,SAAUhJ,EACViJ,aAAW,uCAGb,2BAAOC,QAAQ,UACb,0BAAMC,KAAK,MAAMF,aAAW,mBAA5B,gBAGA,0BAAME,KAAK,MAAMF,aAAW,mBAA5B,oBCIOG,GAnBA,kBACb,4BAAQ1B,UAAU,UAChB,yBAAKA,UAAU,eACb,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CAAM2B,GAAG,KACP,yBAAK3B,UAAU,QACb,yBAAK4B,IAAKC,IAAMC,IAAI,UAEtB,6CAGJ,yBAAK9B,UAAU,wBACb,kBAAC,GAAD,MACA,kBAAC,GAAD,UCAO+B,I,OAhBC,kBACd,yBAAK/B,UAAU,aACb,iCACM,IACJ,0BAAMyB,KAAK,MAAMF,aAAW,UAA5B,gBAFF,iCAME,0BAAME,KAAK,MAAMF,aAAW,OACzB,IADH,oB,oBCWSS,GAnBK,SAAC,GAAD,IAAGxJ,EAAH,EAAGA,SAAH,OAClB,yBAAKwH,UAAU,aACb,kBAACiC,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKC,IAAN,CAAUC,UAAQ,GAChB,kBAACF,GAAA,EAAKG,OAAN,CAAaC,YAAa,EAAGC,OAAQ,IAClC9J,OC0BLqI,GAAqB,CACzBzB,aAKa0B,gBARS,SAAC,GAAD,MAAiB,CAAEhG,OAAnB,EAAGA,UAQa+F,GAAzBC,EAhCF,WACX,OACE,kBAAC,GAAD,KACE,kBAACyB,GAAA,EAAD,KACE,2BACE,kBAAC,IAAD,CACEZ,GAAI,CACFa,SAAU,WAFd,SAKQ,IANV,KAOK,IACH,kBAAC,IAAD,CACEb,GAAI,CACFa,SAAU,YAFd,iB,kDCLKC,GAZM,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtB,OACE,kBAACC,GAAA,EAAD,CAAQD,OAAQA,EAAQE,UAAQ,GAC9B,kBAACC,GAAA,EAAD,QCWAC,I,OAAQ,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SAAUzI,EAA4B,EAA5BA,QAAS0I,EAAmB,EAAnBA,aAC5BC,EAAe,SAAAC,GACnB,OAAOH,GAAYA,EAASG,IAExBC,EAAeH,GAAgBA,EAAa5E,KAAKgF,kBAEvD,OACE,kBAAC,KAAD,CAAQC,cAAeC,GAAQC,iBAAkBA,IAC9C,SAAAC,GACC,IAAMC,EbkBwB,SAAC,GAAgB,IAAdP,EAAa,EAAbA,OAMvC,OAFsB,CAH6B,IAA3BA,EAAOjG,SAASyG,OAChBR,EAAOxI,SAASgJ,OAAS,GAI3BC,OAAM,SAAAC,GAAK,OAAKA,KaxBbC,CAAuBL,GAClCN,EAAsDM,EAAtDN,OAAQY,EAA8CN,EAA9CM,aAAcC,EAAgCP,EAAhCO,WAAYC,EAAoBR,EAApBQ,OAAQC,EAAYT,EAAZS,QAGlD,OACE,yBAAKjE,UAAU,cACb,kBAACkE,GAAA,EAAD,CAAMnB,SAJO,kBAAME,EAAaC,IAIN1I,QAASwJ,GACjC,kBAAC,GAAD,CAActB,OAAQpI,IACtB,kBAAC4J,GAAA,EAAKC,MAAN,CACEC,OAAK,EACLlH,MAAM,WACNmH,YAAaC,GACbhD,SAAUwC,EACVS,OAAQR,EACRxK,MAAO2J,EAAOhD,KACdA,KAAK,WACLjF,KAAK,QACLT,MAAOyJ,EAAQhH,UAAYuG,EAAMQ,OAAO/G,WAE1C,kBAACiH,GAAA,EAAKC,MAAN,CACEC,OAAK,EACLlH,MAAM,WACNmH,YAAaC,GACbhD,SAAUwC,EACVS,OAAQR,EACRxK,MAAO2J,EAAOhD,KACdA,KAAK,WACLjF,KAAK,WACLT,MAAOyJ,EAAQvJ,UAAYsJ,EAAOtJ,WAGpC,kBAAC6H,GAAA,EAAD,CAAS/H,OAAK,EAACgK,QAASrB,IACxB,yBAAKnD,UAAU,uCACb,kBAACyE,GAAA,EAAD,CACEC,KAAK,MACLzJ,KAAK,SACLX,QAASA,EACTqK,SAAUlB,EACVe,QAAQ,kBAW1B1B,GAAM8B,aAAe,CACnBd,aAAc,kBAAM,MACpBC,WAAY,kBAAM,MAClBb,OAAQ,CACNjG,SAAU,GACVvC,SAAU,IAEZuJ,QAAS,CACPhH,SAAU,IAEZ+G,OAAQ,CACN/G,SAAU,IAEZ+F,aAAc,MAoBDF,UC3ETjC,GAAqB,CACzBzB,aASayF,eAAW/D,aAZF,SAAC,GAAD,MAAiB,CAAEhG,OAAnB,EAAGA,UAYwB+F,GAAzBC,EAlCZ,SAAC,GAAmC,IAAjChG,EAAgC,EAAhCA,OAAQsE,EAAwB,EAAxBA,SAAU0F,EAAc,EAAdA,QAK3B7B,EAAY,uCAAG,WAAMC,GAAN,SAAA5D,EAAA,sEACbF,EAAS8D,GADI,OAHnB4B,EAAQC,KAAK,KAGM,2CAAH,sDAIVvK,EAAmBM,EAAnBN,MAAOF,EAAYQ,EAAZR,QAEf,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CACEyI,SAAUE,EACV3I,QAASA,EACT0I,aAAcxI,SCRhBwK,GAAS,SAAC,GAAyC,IAAvCjC,EAAsC,EAAtCA,SAAUzI,EAA4B,EAA5BA,QAAS0I,EAAmB,EAAnBA,aAAmB,EACXvK,oBAAS,GADE,mBAC/CwM,EAD+C,KACjCC,EADiC,OAECzM,oBAAS,GAFV,mBAE/C0M,EAF+C,KAE3BC,EAF2B,KAGhDC,EAAgB,kBAAMH,GAAoBD,IAC1CK,EAAsB,kBAC1BF,GAA0BD,IACtBI,EAAWN,EAAe,MAAQ,YAClCO,EAAiBL,EAAqB,MAAQ,YAC9ClK,EAAOgK,EAAe,WAAa,QACnCQ,EAAaN,EAAqB,WAAa,QAE/ClC,EAAe,SAAAC,GACnB,OAAOH,GAAYA,EAASG,IAExBC,EAAeH,GAAgBA,EAAa5E,KAAKgF,kBAEvD,OACE,kBAAC,KAAD,CAAQC,cAAeC,GAAQC,iBAAkBA,IAC9C,SAAAC,GACC,IAAMC,EfiByB,SAAC,GAAgB,IAAdP,EAAa,EAAbA,OAUxC,OANsB,CAH6B,IAA3BA,EAAOjG,SAASyG,OAChBR,EAAOxI,SAASgJ,OAAS,EACnBR,EAAO5F,eAAeoG,OAAS,GAOvCC,OAAM,SAAAC,GAAK,OAAKA,Ke3Bb8B,CAAwBlC,GACnCN,EAAsDM,EAAtDN,OAAQY,EAA8CN,EAA9CM,aAAcC,EAAgCP,EAAhCO,WAAYC,EAAoBR,EAApBQ,OAAQC,EAAYT,EAAZS,QAGlD,OACE,yBAAKjE,UAAU,cACb,kBAACkE,GAAA,EAAD,CAAM1J,QAASwJ,GACb,kBAAC,GAAD,CAActB,OAAQpI,IACtB,kBAAC4J,GAAA,EAAKC,MAAN,CACEC,OAAK,EACLlH,MAAM,WACNmH,YAAaC,GACbhD,SAAUwC,EACVS,OAAQR,EACRxK,MAAO2J,EAAOhD,KACdA,KAAK,WACLjF,KAAK,QACLT,MAAOyJ,EAAQhH,UAAYuG,EAAMQ,OAAO/G,WAE1C,kBAACiH,GAAA,EAAKC,MAAN,CACEC,OAAK,EACLlH,MAAM,WACNmH,YAAaC,GACbhD,SAAUwC,EACVS,OAAQR,EACRxK,MAAO2J,EAAOhD,KACdA,KAAK,WACLjF,KAAMA,EACNT,MAAOyJ,EAAQvJ,UAAYsJ,EAAOtJ,SAClCM,OAAQ,CAAE2K,KAAMJ,EAAU9E,QAAS4E,KAErC,kBAACnB,GAAA,EAAKC,MAAN,CACEC,OAAK,EACLlH,MAAM,kBACNmH,YAAaC,GACbhD,SAAUwC,EACVS,OAAQR,EACRxK,MAAO2J,EAAOhD,KACdA,KAAK,iBACLjF,KAAMwK,EACNjL,MAAOyJ,EAAQvJ,UAAYsJ,EAAOtJ,SAClCM,OAAQ,CAAE2K,KAAMH,EAAgB/E,QAAS6E,KAG3C,kBAAC/C,GAAA,EAAD,CAAS/H,OAAK,EAACgK,QAASrB,IACxB,yBAAKnD,UAAU,uCACb,kBAACyE,GAAA,EAAD,CACEC,KAAK,MACLzJ,KAAK,SACLX,QAASA,EACTqK,SAAUlB,EACVe,QAAQ,UACR/D,QAlDO,kBAAMwC,EAAaC,aA6D5C8B,GAAOJ,aAAe,CACpBd,aAAc,kBAAM,MACpBC,WAAY,kBAAM,MAClBb,OAAQ,CACNjG,SAAU,GACVvC,SAAU,IAEZuJ,QAAS,CACPhH,SAAU,IAEZ+G,OAAQ,CACN/G,SAAU,IAEZ+F,aAAc,MAoBDgC,UCnGTnE,GAAqB,CACzBzB,aASayF,eAAW/D,aAZF,SAAC,GAAD,MAAiB,CAAEhG,OAAnB,EAAGA,UAYwB+F,GAAzBC,EAlCX,SAAC,GAAmC,IAAjChG,EAAgC,EAAhCA,OAAQsE,EAAwB,EAAxBA,SAAU0F,EAAc,EAAdA,QAK5B7B,EAAY,uCAAG,WAAMC,GAAN,SAAA5D,EAAA,sEACbF,EAAS8D,GADI,OAHnB4B,EAAQC,KAAK,KAGM,2CAAH,sDAIVvK,EAAmBM,EAAnBN,MAAOF,EAAYQ,EAAZR,QAEf,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CACEyI,SAAUE,EACV3I,QAASA,EACT0I,aAAcxI,SCAPoL,GAfA,kBACb,kBAAC,IAAD,KACE,kBAAC,GAAD,MACA,0BAAM5F,UAAU,QACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6F,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjC,kBAAC,IAAD,CAAOH,KAAK,SAASC,OAAK,EAACC,UAAWjD,KACtC,kBAAC,IAAD,CAAO+C,KAAK,UAAUC,OAAK,EAACC,UAAWf,KAEvC,kBAAC,IAAD,CAAOe,UAAWhE,S,GCPGkE,IAArBzJ,G,GAAAA,MAAOG,G,GAAAA,UAETuJ,GAAc,kBAClB,kBAAC,EAAD,KACE,yBAAKlG,UAAU,WACb,kBAAC,GAAD,SAaSmG,GARH,kBACV,kBAAC,IAAD,CAAU3J,MAAOA,IACf,kBAAC,IAAD,CAAalC,QAAS,kBAAC,GAAD,CAAcoI,QAAM,IAAK/F,UAAWA,IACxD,kBAAC,GAAD,SCdcyJ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,iBAAO,kBAAC,GAAD,MAASxN,SAASyN,eAAe,SDiIlC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvI,MAAK,SAAAwI,GACjCA,EAAaC,kB","file":"static/js/main.1ac0c131.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.e0fef14e.svg\";","import React, { useState, useEffect, useContext } from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst ThemeContext = React.createContext({\n  isDark: false,\n  toggleTheme: () => {},\n});\n\n// Can only be used within the ThemeContext provider\nconst useTheme = () => {\n  const context = useContext(ThemeContext);\n\n  if (!context) {\n    throw new Error('useTheme must be used within ThemeProvider');\n  }\n  return context;\n};\n\n// A custom hook to add \".dark\" class to the the body\n//  element if the persisted mode on localStorage is dark.\nconst useDarkThemeEffect = () => {\n  const [themeState, setThemeState] = useState({\n    isDark: false,\n    hasThemeLoaded: false,\n  });\n\n  useEffect(() => {\n    const lsDark = localStorage.getItem('isDark') === 'true';\n\n    if (lsDark) {\n      document.querySelector('body').classList.add('dark');\n    }\n    setThemeState({\n      ...themeState,\n      isDark: lsDark,\n      hasThemeLoaded: true,\n    });\n  }, []);\n\n  return { themeState, setThemeState };\n};\n\nconst ThemeProvider = ({ children }) => {\n  const { themeState, setThemeState } = useDarkThemeEffect();\n\n  // Render <div /> if the mode is not loaded yet\n  // to avoid rendering in light mode by default\n  if (!themeState.hasThemeLoaded) return <div />;\n\n  // Add or remove \".dark\" class from the body element\n  // when a user toggles the switch\n  const toggleTheme = () => {\n    const isDark = !themeState.isDark;\n\n    localStorage.setItem('isDark', JSON.stringify(isDark));\n    const bodyEl = document.querySelector('body');\n\n    if (isDark) {\n      bodyEl.classList.add('dark');\n    } else {\n      bodyEl.classList.remove('dark');\n    }\n    setThemeState({ ...themeState, isDark });\n  };\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        isDark: themeState.isDark,\n        toggleTheme,\n      }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nThemeProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport { ThemeProvider, useTheme };\n","export const COMMON = {\n  START: '__START',\n  SUCCESS: '__SUCCESS',\n  ERROR: '__ERROR',\n  CLEAR: '__CLEAR',\n};\n","export default {\n  SIGNUP_GET_TOKEN: 'SIGNUP_GET_TOKEN',\n  SIGNUP_CLEAR_USER_INFO: 'SIGNUP_CLEAR_USER_INFO',\n  SIGNUP_CLEAR_USER_ERROR: 'SIGNUP_CLEAR_USER_ERROR',\n};\n","import jwt from 'jwt-decode';\nimport { COMMON } from '../types';\nimport CONSTANTS from './constants';\n\nconst defaultState = {\n  loading: false,\n  loaded: false,\n  error: null,\n  token: null,\n  password: '',\n  decodedToken: {},\n};\n\nexport default function signUp(state = defaultState, action = {}) {\n  switch (action.type) {\n    case CONSTANTS.SIGNUP_CLEAR_USER_INFO:\n      return defaultState;\n\n    case CONSTANTS.SIGNUP_CLEAR_USER_ERROR:\n      return {\n        ...state,\n        error: defaultState.error,\n      };\n\n    case `${CONSTANTS.SIGNUP_GET_TOKEN}${COMMON.START}`:\n      return {\n        ...state,\n        password: action.payload.password,\n        loading: true,\n      };\n\n    case `${CONSTANTS.SIGNUP_GET_TOKEN}${COMMON.SUCCESS}`:\n      return {\n        ...state,\n        loading: defaultState.loading,\n        token: action.payload,\n        error: defaultState.error,\n        loaded: true,\n        decodedToken: jwt(action.payload.access_token),\n      };\n\n    case `${CONSTANTS.SIGNUP_GET_TOKEN}${COMMON.ERROR}`:\n      return {\n        ...state,\n        loading: defaultState.loading,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport signUp from './signUp';\n\nconst appReducer = combineReducers({\n  signUp,\n});\n\nconst allReducers = (state, action) => {\n  if (action.type === 'SIGNUP_CLEAR_USER_INFO') {\n    return appReducer(undefined, action);\n  }\n\n  return appReducer(state, action);\n};\n\nexport default allReducers;\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet';\nimport storage from 'redux-persist/lib/storage';\nimport allReducers from './reducers';\n\nconst logger = createLogger({\n  collapsed: logEntry => !logEntry.error,\n});\n\nconst persistConfig = {\n  timeout: 0,\n  key: 'persist',\n  storage,\n  stateReconciler: hardSet,\n};\n\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV === 'development') {\n  middleware.push(logger);\n}\n\nconst persistedReducer = persistReducer(persistConfig, allReducers);\nconst enhancers = compose(applyMiddleware(...middleware));\n\nconst store = (initialState = {}) => {\n  const store = createStore(persistedReducer, initialState, enhancers);\n\n  const persistor = persistStore(store);\n\n  return { store, persistor };\n};\n\nexport default store;\n","// export const apiUrl = 'http://gtz-mobileadmin-api-dev.azurewebsites.net';\nexport const apiUrl = 'http://api-on-demand-api-dev.azurewebsites.net';\n","import * as yup from 'yup';\nimport * as D from 'date-fns';\n\n// https://github.com/jquense/yup#mixedlabellabel-string-schema\n\nexport const loginValidationSchema = yup.object().shape({\n  username: yup\n    .string()\n    .label('Username')\n    .email('Incorrect Username')\n    .required(),\n  password: yup\n    .string()\n    .label('Password')\n    .required('Please Enter your password'),\n});\n\nexport const signUpValidationSchema = yup.object().shape({\n  username: yup\n    .string()\n    .label('Username')\n    .email('Incorrect Username')\n    .required(),\n  password: yup\n    .string()\n    .label('Password')\n    .required('Please Enter your password'),\n  repeatPassword: yup\n    .string()\n    .label('Repeat Password')\n    .required('Please Repeat your password'),\n});\n\n// eslint-disable-next-line func-names\nexport const paramsSerializer = params => {\n  if (typeof params === 'object') {\n    return Object.keys(params)\n      .map(\n        key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`,\n      )\n      .join('&');\n  }\n  return null;\n};\n\nexport const getLoginDisabledStatus = ({ values }) => {\n  const isValidUsername = values.username.length === 0;\n  const isValidPassword = values.password.length < 1;\n\n  const validationArr = [isValidUsername, isValidPassword];\n\n  return !validationArr.every(field => !field);\n};\n\nexport const getSignUpDisabledStatus = ({ values }) => {\n  const isValidUsername = values.username.length === 0;\n  const isValidPassword = values.password.length < 1;\n  const isValidRepeatPassword = values.repeatPassword.length < 1;\n  const validationArr = [\n    isValidUsername,\n    isValidPassword,\n    isValidRepeatPassword,\n  ];\n\n  return !validationArr.every(field => !field);\n};\n\nexport const getHomeBaseParams = (params, initialLocation) =>\n  params && {\n    homeBasePlaceId: params.place_id || '',\n    homeBaseAddress: params.formatted_address || initialLocation,\n    homeBaseLat: params.geometry.lat || 0,\n    homeBaseLong: params.geometry.lng || 0,\n  };\nexport const dateFormat = date => {\n  const d = D.parseISO(date);\n  const datePattern = `MM/dd/yyyy`;\n\n  return D.format(d, datePattern);\n};\n","import axios from 'axios';\nimport { apiUrl } from './config';\nimport { paramsSerializer } from '../utils/helpers';\n\n// eslint-disable-next-line consistent-return\nconst requestWidth = (method, route, params = {}, headers) => {\n  if (method === 'POST') {\n    return axios({\n      method,\n      url: `${apiUrl}/${route}`,\n      data: params,\n      paramsSerializer,\n      headers,\n    });\n  }\n  return axios({\n    method,\n    url: `${apiUrl}/${route}`,\n    params,\n    paramsSerializer,\n  });\n};\n\nexport const get = (route, params) =>\n  requestWidth('GET', route, params).then(res => res.data);\n\nexport const post = (route, params, headers = {}) =>\n  requestWidth('POST', route, params, headers).then(res => res.data);\n\nexport const requestContainer = params => axios(params).then(res => res.data);\n","export const tokenHeaders = {\n  'Content-Type': 'application/x-www-form-urlencoded',\n};\n\nexport const requestHeaders = {\n  Accept: 'application/json, text/plain, */*',\n  'Content-Type': 'application/json',\n};\n\nexport const getBearerHeaders = token => ({\n  Authorization: `Bearer ${token}`,\n});\n\nexport const tokenParams = {\n  grant_type: 'password',\n  scope: 'api-on-demand-api',\n  client_id: 'api-on-demand-api',\n  client_secret: 'api-on-demand-secret',\n};\n\nexport const signUpPlaceholders = {\n  username: 'email@mail.com',\n  password: '***********',\n  repeatPassword: '***********',\n};\n\nexport const signUpFields = {\n  username: '',\n  password: '',\n  repeatPassword: '',\n};\n\nexport const loginPlaceholders = {\n  username: 'email@mail.com',\n  password: '***********',\n};\nexport const loginFields = {\n  username: '',\n  password: '',\n};\n\nexport const passwordValidationMessage =\n  'Password should contain 8 to 16 characters including a letter, number, and one of the following special characters @$!%*?&';\n\nexport const passwordRegexp =\n  '^(?=.*\\\\d)(?=.*[!@#$%^&*])(?=.*[a-zA-Z]).{8,16}$';\n\nexport const searchUserParams = {\n  isDescending: true,\n  skip: 0,\n  take: 15,\n};\n\nexport const tableColoms = {\n  userStatus: {\n    id: 1,\n    name: 'User Status',\n    sort: true,\n    orderBy: 'IsActive',\n  },\n  firstName: {\n    id: 2,\n    name: 'First Name',\n    sort: true,\n    orderBy: 'FirstName',\n  },\n  lastName: {\n    id: 3,\n    name: 'Last Name',\n    sort: true,\n    orderBy: 'LastName',\n  },\n  emailAddress: {\n    id: 4,\n    name: 'Email Address',\n    sort: true,\n    orderBy: 'Email',\n  },\n  phoneNumber: {\n    id: 5,\n    name: 'Phone Number',\n    sort: true,\n    orderBy: 'Phone',\n  },\n  dotNumber: {\n    id: 6,\n    name: 'DOT Number',\n    sort: true,\n    orderBy: 'DotNumber',\n  },\n  mcNumber: {\n    id: 7,\n    name: 'MC Number',\n    sort: true,\n    orderBy: 'McNumber',\n  },\n  userRole: {\n    id: 8,\n    name: 'User Role',\n    sort: true,\n    orderBy: 'UserRoleId',\n  },\n  dateCreated: {\n    id: 9,\n    name: 'Date Created',\n    sort: true,\n    orderBy: 'CreatedDate',\n  },\n  manageAccount: {\n    id: 10,\n    name: 'Manage Account',\n    sort: true,\n  },\n};\n\nexport const userRole = {\n  SuperDriver: {\n    id: 1,\n    description: 'Super Driver',\n  },\n  PowerDriver: {\n    id: 2,\n    description: 'Power Driver',\n  },\n  Driver: {\n    id: 3,\n    description: 'Driver',\n  },\n};\n","export default {\n  VIEW_SERVER_ERROR: 'VIEW_SERVER_ERROR',\n};\n","import { COMMON } from '../types';\nimport CONSTANTS from './constants';\n\nexport const clearServerError = () => {\n  return dispatch => {\n    dispatch({\n      type: `${CONSTANTS.VIEW_SERVER_ERROR}${COMMON.CLEAR}`,\n    });\n  };\n};\n\nexport const serverError = params => dispatch =>\n  dispatch({\n    type: CONSTANTS.VIEW_SERVER_ERROR,\n    payload: params,\n  });\n","import { COMMON } from '../types';\nimport { post } from '../../../server';\nimport { tokenHeaders as headers, tokenParams } from '../../../utils/constants';\nimport CONSTANTS from './constants';\n\nimport { serverError } from '../view/actions';\n\nexport const clearSignUpError = () => {\n  return dispatch => {\n    dispatch({\n      type: CONSTANTS.SIGNUP_CLEAR_USER_ERROR,\n    });\n  };\n};\n\nexport const clearUserInfo = () => {\n  return dispatch => {\n    dispatch({\n      type: CONSTANTS.SIGNUP_CLEAR_USER_INFO,\n    });\n  };\n};\n\nexport const getToken = params => {\n  const adjustedParams = {\n    ...params,\n    ...tokenParams,\n  };\n\n  return async dispatch => {\n    dispatch({\n      type: `${CONSTANTS.SIGNUP_GET_TOKEN}${COMMON.START}`,\n      payload: adjustedParams,\n    });\n    try {\n      const formData = new URLSearchParams();\n\n      formData.append('grant_type', adjustedParams.grant_type);\n      formData.append('client_id', adjustedParams.client_id);\n      formData.append('client_secret', adjustedParams.client_secret);\n      formData.append('scope', adjustedParams.scope);\n      formData.append('username', adjustedParams.username);\n      formData.append('password', adjustedParams.password);\n\n      const res = await post('connect/token', formData, headers);\n\n      dispatch({\n        type: `${CONSTANTS.SIGNUP_GET_TOKEN}${COMMON.SUCCESS}`,\n        payload: res,\n      });\n    } catch (err) {\n      console.info('err: ', err);\n      if (err.response && err.response.status === 500) {\n        serverError(err.response);\n      } else {\n        dispatch({\n          type: `${CONSTANTS.SIGNUP_GET_TOKEN}${COMMON.ERROR}`,\n          payload: err.response,\n        });\n      }\n    }\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Icon, Dropdown } from 'semantic-ui-react';\nimport { getToken, clearUserInfo } from '../store/reducers/signUp/actions';\n\nconst AccountInformation = ({ clearUserInfo, signUp }) => {\n  const handleLogout = e => {\n    e.preventDefault();\n    clearUserInfo();\n  };\n  const {\n    decodedToken: { email },\n    token,\n  } = signUp;\n\n  return token ? (\n    <>\n      <div className=\"header-user\">\n        <div className=\"header-user__title\">\n          <Icon name=\"bell outline\" color=\"blue\" />\n          <span>\n            <Icon name=\"user\" color=\"blue\" />\n            <Dropdown text={email}>\n              <Dropdown.Menu>\n                <Dropdown.Item text=\"New\" />\n                <Dropdown.Divider />\n                <Dropdown.Item text=\"logout\" onClick={handleLogout} />\n              </Dropdown.Menu>\n            </Dropdown>\n          </span>\n        </div>\n      </div>\n    </>\n  ) : null;\n};\n\nAccountInformation.defaulProps = {\n  signUp: {\n    token: null,\n    decodedToken: {},\n  },\n};\nAccountInformation.propTypes = {\n  clearUserInfo: PropTypes.func.isRequired,\n  signUp: PropTypes.shape({\n    token: PropTypes.object,\n    decodedToken: PropTypes.shape({\n      email: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nconst mapStateToProps = ({ signUp }) => ({ signUp });\n\nconst mapDispatchToProps = {\n  getToken,\n  clearUserInfo,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountInformation);\n","import React from 'react';\n\nimport { useTheme } from './ThemeProvider';\nimport './Theme.scss';\n\nconst ThemeSwitcher = () => {\n  const { isDark, toggleTheme } = useTheme();\n\n  return (\n    <div className=\"switch\">\n      <input\n        type=\"checkbox\"\n        id=\"switch\"\n        checked={isDark}\n        onChange={toggleTheme}\n        aria-label=\"Switch between Dark and Light mode\"\n      />\n      {/* eslint-disable-next-line */}\n      <label htmlFor=\"switch\">\n        <span role=\"img\" aria-label=\"aria-labelledby\">\n          🌙\n        </span>\n        <span role=\"img\" aria-label=\"aria-labelledby\">\n          ☀️\n        </span>\n      </label>\n    </div>\n  );\n};\n\nexport default ThemeSwitcher;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Logo from '../assets/Logo.svg';\nimport AccountInformation from './AccountInformation';\nimport ThemeSwitcher from './Theme/ThemeSwitcher';\n\nconst Header = () => (\n  <header className=\"header\">\n    <div className=\"header-info\">\n      <div className=\"header-info__name\">\n        <Link to=\"/\">\n          <div className=\"logo\">\n            <img src={Logo} alt=\"logo\" />\n          </div>\n          <span>on demand</span>\n        </Link>\n      </div>\n      <div className=\"header-info__account\">\n        <ThemeSwitcher />\n        <AccountInformation />\n      </div>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nimport './NoRoute.scss';\n\nconst NoRoute = () => (\n  <div className=\"container\">\n    <p>\n      ups{' '}\n      <span role=\"img\" aria-label=\"tricky\">\n        🤪\n      </span>\n      there is no page at this route\n      <span role=\"img\" aria-label=\"omg\">\n        {' '}\n        🙀\n      </span>\n    </p>\n  </div>\n);\n\nexport default NoRoute;\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst GridWrapper = ({ children }) => (\n  <div className=\"container\">\n    <Grid>\n      <Grid.Row centered>\n        <Grid.Column largeScreen={6} mobile={16}>\n          {children}\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  </div>\n);\n\nGridWrapper.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default GridWrapper;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Message } from 'semantic-ui-react';\n\nimport GridWrapper from '../../components/GridWrapper';\n\nimport { getToken } from '../../store/reducers/signUp/actions';\n\nconst Home = () => {\n  return (\n    <GridWrapper>\n      <Message>\n        <p>\n          <Link\n            to={{\n              pathname: '/login',\n            }}>\n            Login\n          </Link>{' '}\n          or{' '}\n          <Link\n            to={{\n              pathname: '/signup',\n            }}>\n            Sign up\n          </Link>\n        </p>\n      </Message>\n    </GridWrapper>\n  );\n};\n\nconst mapStateToProps = ({ signUp }) => ({ signUp });\n\nconst mapDispatchToProps = {\n  getToken,\n};\n\nHome.propTypes = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import { Dimmer, Loader } from 'semantic-ui-react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DimmerLoader = ({ active }) => {\n  return (\n    <Dimmer active={active} inverted>\n      <Loader />\n    </Dimmer>\n  );\n};\n\nDimmerLoader.propTypes = {\n  active: PropTypes.bool.isRequired,\n};\n\nexport default DimmerLoader;\n","import React from 'react';\nimport { Button, Form, Message } from 'semantic-ui-react';\nimport { Formik } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport DimmerLoader from '../../DimmerLoader';\n\nimport {\n  loginValidationSchema as validationSchema,\n  getLoginDisabledStatus,\n} from '../../../utils/helpers';\nimport {\n  loginPlaceholders as placeholders,\n  loginFields as fields,\n} from '../../../utils/constants';\n\nimport '../Form.scss';\n\nconst Login = ({ onSubmit, loading, serverErrors }) => {\n  const handleSubmit = values => {\n    return onSubmit && onSubmit(values);\n  };\n  const errorMessage = serverErrors && serverErrors.data.error_description;\n\n  return (\n    <Formik initialValues={fields} validationSchema={validationSchema}>\n      {props => {\n        const isDisabled = getLoginDisabledStatus(props);\n        const { values, handleChange, handleBlur, errors, touched } = props;\n        const onSubmit = () => handleSubmit(values);\n\n        return (\n          <div className=\"login-form\">\n            <Form onSubmit={onSubmit} error={!!errors}>\n              <DimmerLoader active={loading} />\n              <Form.Input\n                fluid\n                label=\"Username\"\n                placeholder={placeholders.username}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.name}\n                name=\"username\"\n                type=\"email\"\n                error={touched.username && props.errors.username}\n              />\n              <Form.Input\n                fluid\n                label=\"Password\"\n                placeholder={placeholders.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.name}\n                name=\"password\"\n                type=\"password\"\n                error={touched.password && errors.password}\n              />\n\n              <Message error content={errorMessage} />\n              <div className=\"btn-container btn-container__center\">\n                <Button\n                  size=\"big\"\n                  type=\"submit\"\n                  loading={loading}\n                  disabled={isDisabled}\n                  content=\"Login\"\n                />\n              </div>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nLogin.defaultProps = {\n  handleChange: () => null,\n  handleBlur: () => null,\n  values: {\n    username: '',\n    password: '',\n  },\n  touched: {\n    username: '',\n  },\n  errors: {\n    username: '',\n  },\n  serverErrors: null,\n};\n\nLogin.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func,\n  handleBlur: PropTypes.func,\n  values: PropTypes.exact({\n    username: PropTypes.string,\n    password: PropTypes.string,\n  }),\n  touched: PropTypes.exact({\n    username: PropTypes.string,\n  }),\n  errors: PropTypes.exact({\n    username: PropTypes.string,\n  }),\n  serverErrors: PropTypes.oneOfType([() => null, PropTypes.object]),\n};\nexport default Login;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport LoginForm from '../../components/Forms/Login';\nimport GridWrapper from '../../components/GridWrapper';\n\nimport { getToken } from '../../store/reducers/signUp/actions';\n\nconst Login = ({ signUp, getToken, history }) => {\n  const redirectToUsers = () => {\n    history.push('/');\n  };\n\n  const handleSubmit = async values => {\n    await getToken(values);\n    redirectToUsers();\n  };\n  const { error, loading } = signUp;\n\n  return (\n    <GridWrapper>\n      <LoginForm\n        onSubmit={handleSubmit}\n        loading={loading}\n        serverErrors={error}\n      />\n    </GridWrapper>\n  );\n};\n\nconst mapStateToProps = ({ signUp }) => ({ signUp });\n\nconst mapDispatchToProps = {\n  getToken,\n};\n\nLogin.propTypes = {\n  getToken: PropTypes.func.isRequired,\n  signUp: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\n","import React, { useState } from 'react';\nimport { Button, Form, Message } from 'semantic-ui-react';\nimport { Formik } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport DimmerLoader from '../../DimmerLoader';\n\nimport {\n  signUpValidationSchema as validationSchema,\n  getSignUpDisabledStatus,\n} from '../../../utils/helpers';\nimport {\n  signUpPlaceholders as placeholders,\n  signUpFields as fields,\n} from '../../../utils/constants';\n\nimport '../Form.scss';\n\nconst SignUp = ({ onSubmit, loading, serverErrors }) => {\n  const [isPassHidden, handleIsPassHidden] = useState(true);\n  const [isRepeatPassHidden, handleIsRepeatPassHidden] = useState(true);\n  const togglePassEye = () => handleIsPassHidden(!isPassHidden);\n  const toggleRepeatPassEye = () =>\n    handleIsRepeatPassHidden(!isRepeatPassHidden);\n  const iconName = isPassHidden ? 'eye' : 'eye slash';\n  const repeatIconName = isRepeatPassHidden ? 'eye' : 'eye slash';\n  const type = isPassHidden ? 'password' : 'input';\n  const typeRepeat = isRepeatPassHidden ? 'password' : 'input';\n\n  const handleSubmit = values => {\n    return onSubmit && onSubmit(values);\n  };\n  const errorMessage = serverErrors && serverErrors.data.error_description;\n\n  return (\n    <Formik initialValues={fields} validationSchema={validationSchema}>\n      {props => {\n        const isDisabled = getSignUpDisabledStatus(props);\n        const { values, handleChange, handleBlur, errors, touched } = props;\n        const onSubmit = () => handleSubmit(values);\n\n        return (\n          <div className=\"login-form\">\n            <Form error={!!errors}>\n              <DimmerLoader active={loading} />\n              <Form.Input\n                fluid\n                label=\"Username\"\n                placeholder={placeholders.username}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.name}\n                name=\"username\"\n                type=\"email\"\n                error={touched.username && props.errors.username}\n              />\n              <Form.Input\n                fluid\n                label=\"Password\"\n                placeholder={placeholders.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.name}\n                name=\"password\"\n                type={type}\n                error={touched.password && errors.password}\n                action={{ icon: iconName, onClick: togglePassEye }}\n              />\n              <Form.Input\n                fluid\n                label=\"Repeat password\"\n                placeholder={placeholders.repeatPassword}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.name}\n                name=\"repeatPassword\"\n                type={typeRepeat}\n                error={touched.password && errors.password}\n                action={{ icon: repeatIconName, onClick: toggleRepeatPassEye }}\n              />\n\n              <Message error content={errorMessage} />\n              <div className=\"btn-container btn-container__center\">\n                <Button\n                  size=\"big\"\n                  type=\"submit\"\n                  loading={loading}\n                  disabled={isDisabled}\n                  content=\"Sign up\"\n                  onClick={onSubmit}\n                />\n              </div>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nSignUp.defaultProps = {\n  handleChange: () => null,\n  handleBlur: () => null,\n  values: {\n    username: '',\n    password: '',\n  },\n  touched: {\n    username: '',\n  },\n  errors: {\n    username: '',\n  },\n  serverErrors: null,\n};\n\nSignUp.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func,\n  handleBlur: PropTypes.func,\n  values: PropTypes.exact({\n    username: PropTypes.string,\n    password: PropTypes.string,\n  }),\n  touched: PropTypes.exact({\n    username: PropTypes.string,\n  }),\n  errors: PropTypes.exact({\n    username: PropTypes.string,\n  }),\n  serverErrors: PropTypes.oneOfType([() => null, PropTypes.object]),\n};\nexport default SignUp;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport SignUpForm from '../../components/Forms/SignUp';\nimport GridWrapper from '../../components/GridWrapper';\n\nimport { getToken } from '../../store/reducers/signUp/actions';\n\nconst SignUp = ({ signUp, getToken, history }) => {\n  const redirectToUsers = () => {\n    history.push('/');\n  };\n\n  const handleSubmit = async values => {\n    await getToken(values);\n    redirectToUsers();\n  };\n  const { error, loading } = signUp;\n\n  return (\n    <GridWrapper>\n      <SignUpForm\n        onSubmit={handleSubmit}\n        loading={loading}\n        serverErrors={error}\n      />\n    </GridWrapper>\n  );\n};\n\nconst mapStateToProps = ({ signUp }) => ({ signUp });\n\nconst mapDispatchToProps = {\n  getToken,\n};\n\nSignUp.propTypes = {\n  getToken: PropTypes.func.isRequired,\n  signUp: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SignUp));\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Header from '../components/Header';\n// import PrivateRoute from './PrivateRoute';\n\nimport NoRoute from '../pages/NoRoute';\nimport Home from '../pages/Home';\nimport Login from '../pages/Login';\nimport SignUp from '../pages/SignUp';\n\nconst Routes = () => (\n  <Router>\n    <Header />\n    <main className=\"main\">\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/login\" exact component={Login} />\n        <Route path=\"/signup\" exact component={SignUp} />\n        {/* <PrivateRoute path=\"/users\" exact component={Users} /> */}\n        <Route component={NoRoute} />\n      </Switch>\n    </main>\n  </Router>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { ThemeProvider } from './components/Theme/ThemeProvider';\nimport './styles/default.scss';\n\nimport configureStore from './store';\n\nimport Routes from './routes';\nimport DimmerLoader from './components/DimmerLoader';\n\nconst { store, persistor } = configureStore();\n\nconst Application = () => (\n  <ThemeProvider>\n    <div className=\"wrapper\">\n      <Routes />\n    </div>\n  </ThemeProvider>\n);\n\nconst App = () => (\n  <Provider store={store}>\n    <PersistGate loading={<DimmerLoader active />} persistor={persistor}>\n      <Application />\n    </PersistGate>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        // eslint-disable-next-line no-use-before-define\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.info(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        // eslint-disable-next-line no-use-before-define\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.info(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.info('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.info(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}